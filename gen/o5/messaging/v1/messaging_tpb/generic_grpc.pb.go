// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: o5/messaging/v1/topic/generic.proto

package messaging_tpb

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GenericMessageTopic_Generic_FullMethodName = "/o5.messaging.v1.topic.GenericMessageTopic/Generic"
)

// GenericMessageTopicClient is the client API for GenericMessageTopic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GenericMessageTopicClient interface {
	Generic(ctx context.Context, in *GenericMessage, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type genericMessageTopicClient struct {
	cc grpc.ClientConnInterface
}

func NewGenericMessageTopicClient(cc grpc.ClientConnInterface) GenericMessageTopicClient {
	return &genericMessageTopicClient{cc}
}

func (c *genericMessageTopicClient) Generic(ctx context.Context, in *GenericMessage, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, GenericMessageTopic_Generic_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GenericMessageTopicServer is the server API for GenericMessageTopic service.
// All implementations must embed UnimplementedGenericMessageTopicServer
// for forward compatibility
type GenericMessageTopicServer interface {
	Generic(context.Context, *GenericMessage) (*emptypb.Empty, error)
	mustEmbedUnimplementedGenericMessageTopicServer()
}

// UnimplementedGenericMessageTopicServer must be embedded to have forward compatible implementations.
type UnimplementedGenericMessageTopicServer struct {
}

func (UnimplementedGenericMessageTopicServer) Generic(context.Context, *GenericMessage) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generic not implemented")
}
func (UnimplementedGenericMessageTopicServer) mustEmbedUnimplementedGenericMessageTopicServer() {}

// UnsafeGenericMessageTopicServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GenericMessageTopicServer will
// result in compilation errors.
type UnsafeGenericMessageTopicServer interface {
	mustEmbedUnimplementedGenericMessageTopicServer()
}

func RegisterGenericMessageTopicServer(s grpc.ServiceRegistrar, srv GenericMessageTopicServer) {
	s.RegisterService(&GenericMessageTopic_ServiceDesc, srv)
}

func _GenericMessageTopic_Generic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenericMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenericMessageTopicServer).Generic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GenericMessageTopic_Generic_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenericMessageTopicServer).Generic(ctx, req.(*GenericMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// GenericMessageTopic_ServiceDesc is the grpc.ServiceDesc for GenericMessageTopic service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GenericMessageTopic_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "o5.messaging.v1.topic.GenericMessageTopic",
	HandlerType: (*GenericMessageTopicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generic",
			Handler:    _GenericMessageTopic_Generic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "o5/messaging/v1/topic/generic.proto",
}
